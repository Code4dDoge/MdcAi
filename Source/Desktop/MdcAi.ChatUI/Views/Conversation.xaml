<?xml version="1.0" encoding="utf-8"?>

<local:ConversationBase
  x:Class="MdcAi.ChatUI.Views.Conversation"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:MdcAi.ChatUI.Views"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:c="using:CommunityToolkit.WinUI.Controls"
  xmlns:winUi="using:CommunityToolkit.WinUI"
  xmlns:chatUi="using:MdcAi.ChatUI"
  xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
  xmlns:salaConverters="using:RxUIExt.WinUI.SalaConverters"
  xmlns:extensions="using:MdcAi.Extensions.WinUI"
  xmlns:componentModel="using:System.ComponentModel"
  xmlns:viewModels="using:MdcAi.ChatUI.ViewModels"
  xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
  mc:Ignorable="d">

  <UserControl.Resources>
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <salaConverters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <extensions:BindingTypeConverter x:Key="TypeConverter" />
    <extensions:BindingFormatConverter x:Key="StringFormatConverter" />
    <extensions:RoundDecimalConverter x:Key="RoundDecimalConverter" />
  </UserControl.Resources>

  <c:DockPanel>

    <CommandBar c:DockPanel.Dock="Top" DefaultLabelPosition="Right">
      <AppBarButton Icon="Refresh" Label="Regenerate" Command="{x:Bind ViewModel.RegenerateSelectedCmd, Mode=OneWay}" />
      <AppBarButton Icon="Delete" Label="Delete" Command="{x:Bind ViewModel.DeleteSelectedCmd, Mode=OneWay}" />

      <AppBarSeparator />

      <AppBarButton Icon="Edit" Label="Edit" Command="{x:Bind ViewModel.EditSelectedCmd, Mode=OneWay}" />
      <AppBarButton Icon="Previous" Command="{x:Bind ViewModel.PrevVersionCmd, Mode=OneWay}" />
      <AppBarButton Icon="Next" Command="{x:Bind ViewModel.NextVersionCmd, Mode=OneWay}" />

      <AppBarSeparator
        Visibility="{x:Bind extensions:Debugging.Enabled, Converter={StaticResource BoolToVisibilityConverter}}" />
      <AppBarButton Icon="Add"
                    Label="Add"
                    Command="{x:Bind ViewModel.DebugGeneratePromptCmd, Mode=OneWay}"
                    Visibility="{x:Bind extensions:Debugging.Enabled, Converter={StaticResource BoolToVisibilityConverter}}" />

      <AppBarButton Icon="Favorite"
                    Label="Test"
                    Command="{x:Bind ViewModel.DebugCmd, Mode=OneWay}"
                    Visibility="{x:Bind extensions:Debugging.Enabled, Converter={StaticResource BoolToVisibilityConverter}}" />
    </CommandBar>

    <c:DockPanel>
      <c:DockPanel c:DockPanel.Dock="Bottom">
        <StackPanel c:DockPanel.Dock="Right" Margin="0,10,10,10" VerticalAlignment="Bottom" Orientation="Horizontal">
          <StackPanel.Resources>
            <DataTemplate x:Key="OverrideSettingsBtnTemplate" x:DataType="viewModels:ConversationVm">
              <Button Command="{Binding Path=EditSettingsCmd, Mode=OneWay}" Height="32" Padding="10,0"
                      Margin="10,0,0,0">
                <SymbolIcon Symbol="Setting" />
              </Button>
            </DataTemplate>
          </StackPanel.Resources>
          <SplitButton Command="{x:Bind ViewModel.SendPromptCmd, Mode=OneWay}" Height="32" Padding="10,0">
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{x:Bind ViewModel.Settings.SelectedModel, Mode=OneWay}" />
              <SymbolIcon Symbol="Send" VerticalAlignment="Center" Margin="10,0,0,0" />
            </StackPanel>
            <SplitButton.Flyout>
              <MenuFlyout x:Name="ModelsMenu" />
            </SplitButton.Flyout>
          </SplitButton>

          <ContentControl ContentTemplate="{StaticResource OverrideSettingsBtnTemplate}"
                          Content="{x:Bind ViewModel, Mode=OneWay}"
                          Visibility="{x:Bind ViewModel.SettingsOverriden, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <ContentControl.Resources>
              <SolidColorBrush x:Key="ButtonBackground" Color="{StaticResource ImportantTransButtonBackground}" />
              <SolidColorBrush x:Key="ButtonBackgroundPointerOver"
                               Color="{StaticResource ImportantTransButtonBackgroundPointerOver}" />
              <SolidColorBrush x:Key="ButtonBackgroundPressed"
                               Color="{StaticResource ImportantTransButtonBackgroundPressed}" />
              <SolidColorBrush x:Key="ButtonBackgroundDisabled"
                               Color="{StaticResource ImportantTransButtonBackgroundDisabled}" />
            </ContentControl.Resources>
          </ContentControl>

          <ContentControl ContentTemplate="{StaticResource OverrideSettingsBtnTemplate}"
                          Content="{x:Bind ViewModel, Mode=OneWay}"
                          Visibility="{x:Bind ViewModel.SettingsOverriden, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True, Mode=OneWay}" />
        </StackPanel>

        <StackPanel>
          <StackPanel Margin="10,10,10,0"
                      Orientation="Horizontal"
                      Visibility="{x:Bind ViewModel.EditMessage, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}">
            <TextBlock FontSize="12"
                       Foreground="{ThemeResource SystemAccentColorLight1}">
              <Run Text="Editing message sent on" />
              <Run Text="{x:Bind ViewModel.EditMessage.Message.CreatedTs, Mode=OneWay}" />
              <Hyperlink winUi:HyperlinkExtensions.Command="{x:Bind ViewModel.CancelEditCmd, Mode=OneWay}">
                <Run Text="(Cancel Edit)" />
              </Hyperlink>
            </TextBlock>
          </StackPanel>
          <TextBox x:Name="PromptField"
                   Margin="10"
                   MaxHeight="400"
                   AcceptsReturn="True"
                   FontSize="15"
                   PlaceholderText="Write your prompt here"
                   ScrollViewer.VerticalScrollBarVisibility="Auto"
                   TextWrapping="Wrap"
                   Text="{x:Bind ViewModel.Prompt.Contents, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
      </c:DockPanel>

      <Grid>
        <WebView2 x:Name="ChatWebView" DefaultBackgroundColor="Transparent" Visibility="Visible" />

        <Grid VerticalAlignment="Bottom"
              HorizontalAlignment="Right"
              Margin="0,0,30,20"
              Visibility="{x:Bind ViewModel.Tail.Message.IsCompleting, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}">
          <Button Content="Stop Generating"
                  Padding="10,5,10,8"
                  Command="{x:Bind ViewModel.Tail.Message.StopCompletionCmd, Mode=OneWay}">
            <Button.Resources>
              <!-- Transparent backgrounds so the button is visible but translucent -->
              <SolidColorBrush x:Key="ButtonBackground" Color="{StaticResource ImportantTransButtonBackground}" />
              <SolidColorBrush x:Key="ButtonBackgroundPointerOver"
                               Color="{StaticResource ImportantTransButtonBackgroundPointerOver}" />
              <SolidColorBrush x:Key="ButtonBackgroundPressed"
                               Color="{StaticResource ImportantTransButtonBackgroundPressed}" />
              <SolidColorBrush x:Key="ButtonBackgroundDisabled"
                               Color="{StaticResource ImportantTransButtonBackgroundDisabled}" />
            </Button.Resources>
          </Button>
        </Grid>

        <StackPanel
          Margin="20"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Visibility="{x:Bind ViewModel.ShowGettingStartedTip, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
          <Border
            CornerRadius="10"
            Background="{ThemeResource ControlFillColorDefaultBrush}">

            <c:DockPanel>
              <Border c:DockPanel.Dock="Left" Width="300">
                <Border.Background>
                  <ImageBrush ImageSource="ms-appx:///MdcAi.ChatUI/Assets/AiProfiles.jpg"
                              Stretch="UniformToFill"
                              AlignmentX="Center"
                              AlignmentY="Center" />
                </Border.Background>
              </Border>

              <StackPanel Margin="2">
                <TextBlock Style="{ThemeResource TitleTextBlockStyle}" Margin="15,5,15,5">
                  Getting Started Tips ✨
                </TextBlock>
                <NavigationView x:Name="TipsNavigationView"
                                PaneDisplayMode="Top"
                                IsSettingsVisible="False"
                                IsBackButtonVisible="Collapsed"
                                ItemInvoked="TipsNavigationView_OnItemInvoked"
                                SelectionChanged="TipsNavigationView_OnSelectionChanged"
                                Loaded="TipsNavigationView_OnLoaded">
                  <NavigationView.MenuItems>
                    <NavigationViewItem Content="Conversations" Tag="Conversations" />
                    <NavigationViewItem Content="Categories" Tag="Categories" />
                    <NavigationViewItem Content="Editing" Tag="Editing" />
                    <NavigationViewItem Content="Settings" Tag="Settings" />
                    <NavigationViewItem Content="Premise" Tag="Premise" />
                  </NavigationView.MenuItems>
                  <Frame x:Name="TipsContentFrame" Margin="10" />
                </NavigationView>
              </StackPanel>
            </c:DockPanel>
          </Border>

          <StackPanel Margin="10" Spacing="10">
            <TextBlock>
              <Hyperlink Click="DontShowGettingStartedTip_OnClick">Don't show these tips anymore (can be re-enabled in Settings)</Hyperlink>
            </TextBlock>

            <TextBlock Visibility="{x:Bind ViewModel.GlobalSettings.ShowPrivacyStatementCmd, Converter={StaticResource NullToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}">
              <Hyperlink Click="ShowPrivacyHyperlink_OnClick">Your Privacy is Safe</Hyperlink>
            </TextBlock>
          </StackPanel>
        </StackPanel>

        <!--<Border HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Padding="20"
                Margin="20"
                CornerRadius="5"
                Background="{ThemeResource ControlFillColorDefaultBrush}"
                Visibility="{x:Bind ViewModel.ShowGettingStartedTip, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
          <StackPanel>
            <TextBlock Style="{ThemeResource TitleTextBlockStyle}">
              Good to Know Information 👇
            </TextBlock>
            <StackPanel Spacing="5" Margin="0,10,0,0">
              <TextBlock TextWrapping="Wrap">
                🔐 <Bold>Privacy</Bold> - your data and information will NOT be collected or used for AI training. No servers
                or APIs are used other than OpenAI. Your inputs are saved locally to your computer and
                managed by Windows and/or Microsoft App Store. This app itself does not collect any information and OpenAI
                API is subject to OpenAI Enterprise Privacy policy which is available on the OpenAI website.
              </TextBlock>

              <TextBlock TextWrapping="Wrap">
                💵 <Bold>Costs</Bold> - no cost-saving algorithms are used - you pay for what you use, all inputs are directly sent
                to OpenAI API. Average users may spend far less than $20 a month, while power users have no constraints and may use the fullest
                power of latest GPT LLMs including pre-releases. You may spend your tokens any time and any way you like.
              </TextBlock>

              <TextBlock TextWrapping="Wrap">
                ⚠️ <Bold>Risks</Bold> - With great power comes great responsibility, GPTs are extremely powerful tools and personal responsibility
                is greater all the more since this app uses the OpenAI API directly with no constraints. Sometimes, AI will provide incorrect answers
                so use with due diligence.
              </TextBlock>

              <TextBlock TextWrapping="Wrap">
                🤔 <Bold>How to start?</Bold> - If you are new using GPT, don't fret, just ask the AI itself how it can help you and how best to
                use it. It cannot be stressed enough how powerful GPTs are so any suggestion out-of-the-box would be comical, just start the
                conversation and don't hold back from asking about any topic. When in doubt, OpenAI has a community Forum where you may discuss ideas,
                suggestions and challenges.
              </TextBlock>

              <TextBlock Margin="0,5,0,0">
                <Hyperlink Click="DontShowGettingStartedTip_OnClick">Ok, I understand. Don't show this stuff anymore (can be re-enabled in Settings).</Hyperlink>
              </TextBlock>

            </StackPanel>
          </StackPanel>
        </Border>-->

        <ContentDialog x:Name="SettingsDialog"
                       PrimaryButtonText="Done"
                       IsSecondaryButtonEnabled="{x:Bind ViewModel.SettingsOverriden, Mode=OneWay}"
                       SecondaryButtonText="Reset"
                       SecondaryButtonCommand="{x:Bind ViewModel.ResetSettingsCmd, Mode=OneWay}">
          <ContentDialog.Resources>
            <Thickness x:Key="ContentDialogPadding">10</Thickness>
          </ContentDialog.Resources>

          <Pivot Width="400" DataContext="{x:Bind ViewModel, Mode=OneWay}">
            <PivotItem Header="Parameters">
              <StackPanel Margin="0,10,0,0">

                <c:UniformGrid Margin="0,5,0,0" Columns="2"
                               ToolTipService.ToolTip="Crank up the temperature for creative chaos, turn it down for repetitive, predictable answers. An AI thermostat of sorts.">
                  <TextBlock Margin="0,5">
                    <Run Text="Temperature:" />
                    <Run
                      Text="{x:Bind ViewModel.Settings.Temperature, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:N2}'}" />
                  </TextBlock>

                  <Slider
                    Value="{x:Bind ViewModel.Settings.Temperature, Mode=TwoWay, Converter={StaticResource RoundDecimalConverter}}"
                    Minimum="0"
                    Maximum="2"
                    SmallChange="0.05"
                    StepFrequency="0.1" />
                </c:UniformGrid>

                <c:UniformGrid Margin="0,5,0,0" Columns="2">
                  <TextBlock Margin="0,5"
                             ToolTipService.ToolTip="Higher value means more factual answers and less nonsense. Lower it to see the weirdo, but more human, side of AI more often.">
                    <Run Text="Top Probability:" />
                    <Run
                      Text="{x:Bind Path=ViewModel.Settings.TopP, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:N2}'}" />
                  </TextBlock>
                  <Slider
                    Value="{x:Bind ViewModel.Settings.TopP, Mode=TwoWay, Converter={StaticResource RoundDecimalConverter}}"
                    Minimum="0"
                    Maximum="1"
                    SmallChange="0.05"
                    StepFrequency="0.1" />
                </c:UniformGrid>

                <c:UniformGrid Margin="0,5,0,0" Columns="2"
                               ToolTipService.ToolTip="Increase the value to prevent repetitive character that makes AI look like it's got early dementia. Lower it if you yourself don't have the best memory.">
                  <TextBlock Margin="0,5">
                    <Run Text="Frequency Penalty:" />
                    <Run
                      Text="{x:Bind ViewModel.Settings.FrequencyPenalty, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:N2}'}" />
                  </TextBlock>
                  <Slider
                    Value="{x:Bind ViewModel.Settings.FrequencyPenalty, Mode=TwoWay, Converter={StaticResource RoundDecimalConverter}}"
                    Minimum="0"
                    Maximum="2"
                    SmallChange="0.05"
                    StepFrequency="0.1" />
                </c:UniformGrid>

                <c:UniformGrid Margin="0,5,0,0" Columns="2"
                               ToolTipService.ToolTip="Increase the value to prevent AI from re-using same words or phrases over and over again to the point of being annoying.">
                  <TextBlock Margin="0,5">
                    <Run Text="Presence Penalty:" />
                    <Run
                      Text="{x:Bind ViewModel.Settings.PresencePenalty, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:N2}'}" />
                  </TextBlock>
                  <Slider
                    Value="{x:Bind ViewModel.Settings.PresencePenalty, Mode=TwoWay, Converter={StaticResource RoundDecimalConverter}}"
                    Minimum="0"
                    Maximum="2"
                    SmallChange="0.05"
                    StepFrequency="0.1" />
                </c:UniformGrid>

                <c:UniformGrid Margin="0,5,0,0" Columns="2"
                               ToolTipService.ToolTip="Turning this setting off will result in completions being delivered in all-at-once fashion, rather than word by word.">
                  <TextBlock Text="Completion Streaming" Margin="0,5" />
                  <ToggleSwitch IsOn="{x:Bind ViewModel.Settings.Streaming, Mode=TwoWay}" />
                </c:UniformGrid>

                <c:UniformGrid Columns="2">
                  <TextBlock Text="Default Model" Margin="0,5" />
                  <ComboBox x:Name="ChatSettingModelDropdown" HorizontalAlignment="Stretch" />
                </c:UniformGrid>

              </StackPanel>
            </PivotItem>
            <PivotItem Header="Premise">
              <TextBox TextWrapping="Wrap"
                       Text="{x:Bind ViewModel.Settings.Premise, Mode=TwoWay}"
                       Margin="0,15,0,0"
                       MaxHeight="200"
                       AcceptsReturn="True"
                       ScrollViewer.VerticalScrollBarVisibility="Auto" />
            </PivotItem>
          </Pivot>
        </ContentDialog>
      </Grid>
    </c:DockPanel>
  </c:DockPanel>
</local:ConversationBase>